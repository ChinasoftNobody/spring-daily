<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgh.spring.boot.mapper.TemplateMapper">
    <resultMap id="base" type="com.lgh.spring.boot.model.MBase">
        <id column="id" property="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="createOn" property="createOn" javaType="java.lang.String" jdbcType="DATE"/>
        <result column="updateOn" property="updateOn" javaType="java.lang.String" jdbcType="DATE"/>
        <result column="del" property="del" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
    </resultMap>
    <resultMap id="templateResultMap" type="com.lgh.spring.boot.model.MTemplate" extends="base">
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="description" column="description" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="featureId" column="feature_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="templateWithPropertiesResultMap" type="com.lgh.spring.boot.model.MTemplate"
               extends="templateResultMap">
        <collection property="properties" resultMap="propertyResultMap"/>
    </resultMap>
    <resultMap id="propertyResultMap" type="com.lgh.spring.boot.model.MTemplateProperty">
        <id column="propertyId" property="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result column="propertyCreateOn" property="createOn" javaType="java.lang.String" jdbcType="DATE"/>
        <result column="propertyUpdateOn" property="updateOn" javaType="java.lang.String" jdbcType="DATE"/>
        <result column="propertyDel" property="del" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
        <result column="propertyName" property="name"/>
        <result column="propertyType" property="type"/>
        <result column="propertyDescription" property="description"/>
        <result column="propertyDefaultValue" property="defaultValue"/>
        <result column="propertyValue" property="value"/>
        <result column="propertyTemplateId" property="templateId"/>
        <result column="propertyFeatureId" property="featureId"/>
    </resultMap>
    <select id="queryByFeatureId" parameterType="java.lang.Integer" resultMap="templateWithPropertiesResultMap">
        SELECT
            tt.*,
            ttp.id AS propertyId,
            ttp.del AS propertyDel,
            ttp.createOn AS propertyCreateOn,
            ttp.updateOn AS propertyUpdateOn,
            ttp.tmplate_id AS propertyTemplateId,
            ttp.feature_id AS propertyFeatureId,
            ttp.name AS propertyName,
            ttp.type AS propertyType,
            ttp.description AS propertyDescription,
            ttp.default_value AS propertyDefaultValue,
            ttp.value AS propertyValue
        FROM t_template tt LEFT JOIN t_template_property ttp ON tt.id = ttp.tmplate_id
        ORDER BY tt.createOn DESC;
    </select>

    <insert id="create" parameterType="com.lgh.spring.boot.model.MTemplate" useGeneratedKeys="true"
            keyProperty="template.id">
        INSERT INTO t_template (feature_id, name, description)
        VALUES (#{template.featureId}, #{template.name}, #{template.description});
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM t_template
        WHERE id = #{templateId};
    </delete>

    <select id="queryById" parameterType="java.lang.Integer" resultMap="templateWithPropertiesResultMap">
        SELECT
            tt.*,
            ttp.id AS propertyId,
            ttp.del AS propertyDel,
            ttp.createOn AS propertyCreateOn,
            ttp.updateOn AS propertyUpdateOn,
            ttp.tmplate_id AS propertyTemplateId,
            ttp.feature_id AS propertyFeatureId,
            ttp.name AS propertyName,
            ttp.type AS propertyType,
            ttp.description AS propertyDescription,
            ttp.default_value AS propertyDefaultValue,
            ttp.value AS propertyValue
        FROM t_template tt LEFT JOIN t_template_property ttp ON tt.id = ttp.tmplate_id
        WHERE tt.id = #{templateId};
    </select>
</mapper>
